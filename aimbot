local Players, Uis, RService, SGui = game:GetService"Players", game:GetService"UserInputService", game:GetService"RunService", game:GetService"StarterGui"
local Client, Mouse, Camera, CF, RNew, Vec3, Vec2 = Players.LocalPlayer, Players.LocalPlayer:GetMouse(), workspace.CurrentCamera, CFrame.new, Ray.new, Vector3.new, Vector2.new
local Aimlock, MousePressed, CanNotify = true, false, false
local AimlockTarget
local OldPre

getgenv().WorldToViewportPoint = function(P)
    return Camera:WorldToViewportPoint(P)
end

getgenv().WorldToScreenPoint = function(P)
    return Camera.WorldToScreenPoint(Camera, P)
end

getgenv().GetObscuringObjects = function(T)
    if T and T:FindFirstChild(getgenv().AimConfig.AimPart) and Client and Client.Character:FindFirstChild("Head") then 
        local RayPos = workspace:FindPartOnRay(RNew(
            T[getgenv().AimConfig.AimPart].Position, Client.Character.Head.Position)
        )
        if RayPos then return RayPos:IsDescendantOf(T) end
    end
end

getgenv().GetNearestTarget = function()
    local players = {}
    local PLAYER_HOLD = {}
    local DISTANCES = {}
    for i, v in pairs(Players:GetPlayers()) do
        if v ~= Client then
            table.insert(players, v)
        end
    end
    for i, v in pairs(players) do
        if v.Character ~= nil then
            local AIM = v.Character:FindFirstChild("Head")
            if getgenv().AimConfig.TeamCheck == true and v.Team ~= Client.Team or getgenv().AimConfig.TeamCheck == false then 
                local DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
                local RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE)
                local HIT, POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
                local DIFF = math.floor((POS - AIM.Position).magnitude)
                PLAYER_HOLD[v.Name .. i] = { dist = DISTANCE, plr = v, diff = DIFF }
                table.insert(DISTANCES, DIFF)
            end
        end
    end
    
    if unpack(DISTANCES) == nil then
        return nil
    end
    
    local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
    if L_DISTANCE > getgenv().AimConfig.AimRadius then
        return nil
    end
    
    for i, v in pairs(PLAYER_HOLD) do
        if v.diff == L_DISTANCE then
            return v.plr
        end
    end
    return nil
end

Mouse.KeyDown:Connect(function(a)
    if not (Uis:GetFocusedTextBox()) then 
        if a == getgenv().AimConfig.AimlockKey and AimlockTarget == nil then
            pcall(function()
                if MousePressed ~= true then MousePressed = true end 
                local Target = getgenv().GetNearestTarget()
                if Target ~= nil then 
                    AimlockTarget = Target
                end
            end)
        elseif a == getgenv().AimConfig.AimlockKey and AimlockTarget ~= nil then
            AimlockTarget = nil
            MousePressed = false
        end
    end
end)

RService.RenderStepped:Connect(function()
    local config = getgenv().AimConfig
    if config.ThirdPerson == true and config.FirstPerson == true then 
        CanNotify = (Camera.Focus.p - Camera.CFrame.p).Magnitude > 1 or (Camera.Focus.p - Camera.CFrame.p).Magnitude <= 1
    elseif config.ThirdPerson == true then 
        CanNotify = (Camera.Focus.p - Camera.CFrame.p).Magnitude > 1
    elseif config.FirstPerson == true then 
        CanNotify = (Camera.Focus.p - Camera.CFrame.p).Magnitude <= 1
    end

    if Aimlock == true and MousePressed == true and AimlockTarget and AimlockTarget.Character and AimlockTarget.Character:FindFirstChild(config.AimPart) then 
        if config.FirstPerson == true and CanNotify == true then
            local targetPos = AimlockTarget.Character[config.AimPart].Position
            local predictedPos = targetPos + (config.PredictMovement and AimlockTarget.Character[config.AimPart].Velocity / config.PredictionVelocity or Vec3())
            local mainFrame = CF(Camera.CFrame.p, predictedPos)
            
            if config.Smoothness == true then
                Camera.CFrame = Camera.CFrame:Lerp(mainFrame, config.SmoothnessAmount)
            else
                Camera.CFrame = mainFrame
            end
        end
    end
    
    if config.CheckIfJumped == true and AimlockTarget then
        if AimlockTarget.Character:FindFirstChild("Humanoid").FloorMaterial == Enum.Material.Air then
            config.AimPart = "UpperTorso"
        else
            config.AimPart = config.OldAimPart
        end
    end
end)
