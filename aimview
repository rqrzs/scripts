local rs = game:GetService("RunService")
local localPlayer = game.Players.LocalPlayer
local mouse = localPlayer:GetMouse()
local target

function getgun()
    for i, v in pairs(target.Character:GetChildren()) do
        if v and (v:FindFirstChild('Default') or v:FindFirstChild('Handle')) then
            return v
        end
    end
end

function get_closet()
    local a = math.huge
    local b

    for i, v in pairs(game.Players:GetPlayers()) do
        if v ~= localPlayer and v.Character and v.Character:FindFirstChild("Head") and v.Character:FindFirstChild("HumanoidRootPart") then
            local c = game.Workspace.CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local d = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(c.X, c.Y)).Magnitude

            if a > d then
                b = v
                a = d
            end
        end
    end

    return b
end

mouse.KeyDown:Connect(function(z)
    if z == _G.toggle_keybind then
        _G.enable = not _G.enable
    end
end)

mouse.KeyDown:Connect(function(z)
    if z == _G.swith_nigga then
        target = get_closet()
    end
end)

local a = Instance.new("Beam")
a.Segments = 1
a.Width0 = 0.2
a.Width1 = 0.2
a.FaceCamera = true

local color1 = Color3.fromRGB(25, 25, 25)
local color2 = Color3.fromRGB(230, 230, 230)
local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true) -- Loop and reverse

local tween = game:GetService("TweenService"):Create(a, tweenInfo, {Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, color1),
    ColorSequenceKeypoint.new(0.5, color2),
    ColorSequenceKeypoint.new(1, color1)
}})

a.Parent = workspace.Terrain
local b = Instance.new("Attachment")
local c = Instance.new("Attachment")
a.Attachment0 = b
a.Attachment1 = c
b.Parent = workspace.Terrain
c.Parent = workspace.Terrain

task.spawn(function()
    rs.RenderStepped:Connect(function()
        local character = localPlayer.Character
        if not character then
            a.Enabled = false
            return
        end

        if _G.enable and getgun() and target and target.Character:FindFirstChild("BodyEffects") and target.Character:FindFirstChild("Head") then
            a.Enabled = true
            b.Position = target.Character:FindFirstChild("Head").Position
            c.Position = target.Character.BodyEffects[_G.method].Value
            if not tween.PlaybackState == Enum.PlaybackState.Playing then
                tween:Play()
            end
        else
            a.Enabled = false
            tween:Cancel()
        end
    end)
end)
